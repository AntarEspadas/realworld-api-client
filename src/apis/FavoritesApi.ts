/* tslint:disable */
/* eslint-disable */
/**
 * RealWorld Conduit API
 * Documentaci√≥n del API de Conduit
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GenericErrorModel,
  InlineObject3,
} from '../models/index';
import {
    GenericErrorModelFromJSON,
    GenericErrorModelToJSON,
    InlineObject3FromJSON,
    InlineObject3ToJSON,
} from '../models/index';

export interface CreateArticleFavoriteRequest {
    slug: string;
}

export interface DeleteArticleFavoriteRequest {
    slug: string;
}

/**
 * 
 */
export class FavoritesApi extends runtime.BaseAPI {

    /**
     * Favorite an article. Auth is required
     * Favorite an article
     */
    async createArticleFavoriteRaw(requestParameters: CreateArticleFavoriteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InlineObject3>> {
        if (requestParameters['slug'] == null) {
            throw new runtime.RequiredError(
                'slug',
                'Required parameter "slug" was null or undefined when calling createArticleFavorite().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // Token authentication
        }


        let urlPath = `/articles/{slug}/favorite`;
        urlPath = urlPath.replace(`{${"slug"}}`, encodeURIComponent(String(requestParameters['slug'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InlineObject3FromJSON(jsonValue));
    }

    /**
     * Favorite an article. Auth is required
     * Favorite an article
     */
    async createArticleFavorite(requestParameters: CreateArticleFavoriteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InlineObject3> {
        const response = await this.createArticleFavoriteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Unfavorite an article. Auth is required
     * Unfavorite an article
     */
    async deleteArticleFavoriteRaw(requestParameters: DeleteArticleFavoriteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InlineObject3>> {
        if (requestParameters['slug'] == null) {
            throw new runtime.RequiredError(
                'slug',
                'Required parameter "slug" was null or undefined when calling deleteArticleFavorite().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // Token authentication
        }


        let urlPath = `/articles/{slug}/favorite`;
        urlPath = urlPath.replace(`{${"slug"}}`, encodeURIComponent(String(requestParameters['slug'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InlineObject3FromJSON(jsonValue));
    }

    /**
     * Unfavorite an article. Auth is required
     * Unfavorite an article
     */
    async deleteArticleFavorite(requestParameters: DeleteArticleFavoriteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InlineObject3> {
        const response = await this.deleteArticleFavoriteRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
